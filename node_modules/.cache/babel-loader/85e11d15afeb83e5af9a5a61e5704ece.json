{"ast":null,"code":"var _jsxFileName = \"/Users/sofiapacheco/Desktop/T3/t3/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport * as io from 'socket.io-client';\nimport Table from 'react-bootstrap/Table';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Line, LineChart, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      exchange: {},\n      stocks: {},\n      ready_stock: false,\n      first: true\n    };\n  }\n\n  async getInitialStock(socket) {\n    console.log('hola');\n    let copyStocks = {};\n    socket.emit('STOCKS');\n    socket.on('STOCKS', data => {\n      console.log(data);\n\n      for (const num in data) {\n        copyStocks[data[num]['ticker']] = {\n          'company_name': data[num]['company_name'],\n          'country': data[num]['country'],\n          'total_volume': 0,\n          'higher': 0,\n          'lower': 0,\n          'last_price': 0,\n          'porcentual_change': 0,\n          'data': []\n        };\n      }\n\n      this.setState({\n        stocks: copyStocks,\n        ready_stock: true\n      });\n    });\n  }\n\n  updateStock(socket) {\n    console.log('updateStock');\n    socket.on('UPDATE', data => {\n      if (this.state.ready_stock) {\n        var date = new Date(data['time'] * 1000);\n        var hours = date.getHours();\n        var minutes = \"0\" + date.getMinutes();\n        var formattedTime = hours + ':' + minutes.substr(-2);\n        let copyStocks = { ...this.state.stocks\n        };\n        copyStocks[data['ticker']]['data'].push({\n          'time': formattedTime,\n          value: data['value']\n        });\n\n        if (copyStocks[data['ticker']]['lower'] === 0 || copyStocks[data['ticker']]['lower'] > data['value']) {\n          copyStocks[data['ticker']]['lower'] = data['value'];\n        }\n\n        if (copyStocks[data['ticker']]['higher'] < data['value']) {\n          copyStocks[data['ticker']]['higher'] = data['value'];\n        }\n\n        copyStocks[data['ticker']]['porcentual_change'] = data['value'] * 100 / copyStocks[data['ticker']]['last_price'] - 100;\n        copyStocks[data['ticker']]['last_price'] = data['value'];\n        this.setState({\n          stocks: copyStocks\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    var socket = io('wss://le-18262636.bitzonte.com', {\n      path: '/stocks'\n    });\n    this.getInitialStock(socket);\n    this.updateStock(socket);\n  }\n\n  render() {\n    // console.log(this.state.stocks)\n    if (this.state.ready_stock) {\n      const {\n        stocks\n      } = this.state;\n      console.log(stocks);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, \"Acci\\xF3n wuju\"), Object.keys(stocks).map((key, index) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, stocks[key]['company_name']), /*#__PURE__*/React.createElement(LineChart, {\n        width: 500,\n        height: 200,\n        data: [...stocks[key]['data']],\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        dataKey: \"time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"value\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, \"Indicador\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, \"Valor\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, \"Volumen Total Tranzado\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, \"Mark\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, \"Alto Hist\\xF3rico\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, stocks[key]['higher'])), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, \"Bajo Hist\\xF3rico\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, stocks[key]['lower'])), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, \"\\xDAltimo Precio\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, stocks[key]['last_price'])), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, \"Cambio Porcentual\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, stocks[key]['porcentual_change'])))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, \"Acci\\xF3n\"));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sofiapacheco/Desktop/T3/t3/src/App.js"],"names":["React","io","Table","Line","LineChart","XAxis","YAxis","Tooltip","CartesianGrid","App","Component","constructor","state","exchange","stocks","ready_stock","first","getInitialStock","socket","console","log","copyStocks","emit","on","data","num","setState","updateStock","date","Date","hours","getHours","minutes","getMinutes","formattedTime","substr","push","value","componentDidMount","path","render","Object","keys","map","key","index","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,sCAAP;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,aANF,QAOO,UAPP;;AASA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,WAAW,EAAE,KAHF;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAED,QAAMC,eAAN,CAAsBC,MAAtB,EAA8B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAH,IAAAA,MAAM,CAACI,IAAP,CAAY,QAAZ;AACAJ,IAAAA,MAAM,CAACK,EAAP,CAAU,QAAV,EAAqBC,IAAD,IAAU;AAC5BL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,WAAK,MAAMC,GAAX,IAAkBD,IAAlB,EAAwB;AAEtBH,QAAAA,UAAU,CAACG,IAAI,CAACC,GAAD,CAAJ,CAAU,QAAV,CAAD,CAAV,GAAkC;AAChC,0BAAgBD,IAAI,CAACC,GAAD,CAAJ,CAAU,cAAV,CADgB;AAEhC,qBAAWD,IAAI,CAACC,GAAD,CAAJ,CAAU,SAAV,CAFqB;AAGhC,0BAAgB,CAHgB;AAIhC,oBAAU,CAJsB;AAKhC,mBAAS,CALuB;AAMhC,wBAAc,CANkB;AAOhC,+BAAqB,CAPW;AAQhC,kBAAQ;AARwB,SAAlC;AAUD;;AACD,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAEO,UAAV;AAAsBN,QAAAA,WAAW,EAAE;AAAnC,OAAd;AACD,KAhBD;AAkBD;;AAEDY,EAAAA,WAAW,CAACT,MAAD,EAAS;AAElBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAF,IAAAA,MAAM,CAACK,EAAP,CAAU,QAAV,EAAoBC,IAAD,IAAU;AAC3B,UAAI,KAAKZ,KAAL,CAAWG,WAAf,EAA2B;AACzB,YAAIa,IAAI,GAAG,IAAIC,IAAJ,CAASL,IAAI,CAAC,MAAD,CAAJ,GAAe,IAAxB,CAAX;AACA,YAAIM,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAZ;AACA,YAAIC,OAAO,GAAG,MAAMJ,IAAI,CAACK,UAAL,EAApB;AACA,YAAIC,aAAa,GAAGJ,KAAK,GAAG,GAAR,GAAcE,OAAO,CAACG,MAAR,CAAe,CAAC,CAAhB,CAAlC;AACA,YAAId,UAAU,GAAG,EAAE,GAAG,KAAKT,KAAL,CAAWE;AAAhB,SAAjB;AACAO,QAAAA,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,MAA3B,EAAmCY,IAAnC,CAAwC;AAAC,kBAAOF,aAAR;AAAuBG,UAAAA,KAAK,EAAEb,IAAI,CAAC,OAAD;AAAlC,SAAxC;;AACA,YAAIH,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,OAA3B,MAAuC,CAAvC,IAA4CH,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,OAA3B,IAAsCA,IAAI,CAAC,OAAD,CAA1F,EAAoG;AAClGH,UAAAA,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,OAA3B,IAAsCA,IAAI,CAAC,OAAD,CAA1C;AACD;;AACD,YAAIH,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,QAA3B,IAAuCA,IAAI,CAAC,OAAD,CAA/C,EAAyD;AACvDH,UAAAA,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,QAA3B,IAAuCA,IAAI,CAAC,OAAD,CAA3C;AACD;;AACDH,QAAAA,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,mBAA3B,IAAmDA,IAAI,CAAC,OAAD,CAAJ,GAAc,GAAd,GAAkBH,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,YAA3B,CAAnB,GAA6D,GAA/G;AACAH,QAAAA,UAAU,CAACG,IAAI,CAAC,QAAD,CAAL,CAAV,CAA2B,YAA3B,IAA2CA,IAAI,CAAC,OAAD,CAA/C;AACA,aAAKE,QAAL,CAAc;AAAEZ,UAAAA,MAAM,EAAEO;AAAV,SAAd;AAAsC;AAEzC,KAlBD;AAmBD;;AAEDiB,EAAAA,iBAAiB,GAAG;AAClB,QAAIpB,MAAM,GAAGjB,EAAE,CAAC,gCAAD,EAAmC;AAChDsC,MAAAA,IAAI,EAAE;AAD0C,KAAnC,CAAf;AAGA,SAAKtB,eAAL,CAAqBC,MAArB;AACA,SAAKS,WAAL,CAAiBT,MAAjB;AACF;;AAGAsB,EAAAA,MAAM,GAAI;AACR;AACA,QAAI,KAAK5B,KAAL,CAAWG,WAAf,EAA4B;AAC1B,YAAM;AAAED,QAAAA;AAAF,UAAa,KAAKF,KAAxB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAII2B,MAAM,CAACC,IAAP,CAAY5B,MAAZ,EAAoB6B,GAApB,CAAwB,CAACC,GAAD,EAAMC,KAAN,kBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAG,QAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB/B,MAAM,CAAC8B,GAAD,CAAN,CAAY,cAAZ,CAAhB,CADA,eAGA,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,IAAI,EAAE,CAAC,GAAG9B,MAAM,CAAC8B,GAAD,CAAN,CAAY,MAAZ,CAAJ,CAHR;AAIE,QAAA,MAAM,EAAE;AACNE,UAAAA,GAAG,EAAE,EADC;AACGC,UAAAA,KAAK,EAAE,EADV;AACcC,UAAAA,IAAI,EAAE,CADpB;AACuBC,UAAAA,MAAM,EAAE;AAD/B,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQA,oBAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,eASA,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,eAUA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,eAWA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXA,eAYA,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,OAA9B;AAAsC,QAAA,MAAM,EAAC,SAA7C;AAAuD,QAAA,IAAI,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,CAHA,eAiBA,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,IAAI,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKnC,MAAM,CAAC8B,GAAD,CAAN,CAAY,QAAZ,CAAL,CAFF,CALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK9B,MAAM,CAAC8B,GAAD,CAAN,CAAY,OAAZ,CAAL,CAFF,CATF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK9B,MAAM,CAAC8B,GAAD,CAAN,CAAY,YAAZ,CAAL,CAFF,CAbF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK9B,MAAM,CAAC8B,GAAD,CAAN,CAAY,mBAAZ,CAAL,CAFF,CAjBF,CAPF,CAjBA,CADF,CAJJ,CADF;AA0DD,KA7DD,MA6DO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD;AACF;;AA3I8B;;AA+IjC,eAAenC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport * as io from 'socket.io-client';\nimport Table from 'react-bootstrap/Table'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip, \n  CartesianGrid\n} from 'recharts';\n\nclass App extends React.Component{\n  constructor() {\n    super();\n    \n    this.state = {\n      exchange: {},\n      stocks: {},\n      ready_stock: false,\n      first: true\n    };\n  }\n  \n  async getInitialStock(socket) {\n    console.log('hola')\n    let copyStocks = { };\n    socket.emit('STOCKS');\n    socket.on('STOCKS', (data) => {\n      console.log(data)\n      for (const num in data) {\n        \n        copyStocks[data[num]['ticker']] = {\n          'company_name': data[num]['company_name'],\n          'country': data[num]['country'],\n          'total_volume': 0,\n          'higher': 0,\n          'lower': 0,\n          'last_price': 0,\n          'porcentual_change': 0,\n          'data': [],\n        };\n      }\n      this.setState({ stocks: copyStocks, ready_stock: true });\n    });\n\n  }\n\n  updateStock(socket) {\n\n    console.log('updateStock');\n    socket.on('UPDATE',(data) => {\n      if (this.state.ready_stock){\n        var date = new Date(data['time'] * 1000);\n        var hours = date.getHours();\n        var minutes = \"0\" + date.getMinutes();\n        var formattedTime = hours + ':' + minutes.substr(-2)\n        let copyStocks = { ...this.state.stocks };\n        copyStocks[data['ticker']]['data'].push({'time':formattedTime, value :data['value']});\n        if (copyStocks[data['ticker']]['lower']=== 0 || copyStocks[data['ticker']]['lower'] > data['value']){\n          copyStocks[data['ticker']]['lower'] = data['value']\n        }\n        if (copyStocks[data['ticker']]['higher'] < data['value']){\n          copyStocks[data['ticker']]['higher'] = data['value']\n        }\n        copyStocks[data['ticker']]['porcentual_change'] = (data['value']*100/copyStocks[data['ticker']]['last_price'])-100\n        copyStocks[data['ticker']]['last_price'] = data['value']\n        this.setState({ stocks: copyStocks});}\n\n    });\n  }\n\n  componentDidMount() {\n    var socket = io('wss://le-18262636.bitzonte.com', {\n      path: '/stocks'\n    });\n    this.getInitialStock(socket);\n    this.updateStock(socket)\n }\n\n  \n  render () {\n    // console.log(this.state.stocks)\n    if (this.state.ready_stock) {\n      const { stocks } = this.state;\n      console.log(stocks);\n      return (\n        <div className=\"App\">\n          <h1>Acción wuju</h1>\n          \n          {\n            Object.keys(stocks).map((key, index) => ( \n              <div>\n              <p key={index}>{stocks[key]['company_name']}</p>\n\n              <LineChart\n                width={500}\n                height={200}\n                data={[...stocks[key]['data']]}\n                margin={{\n                  top: 10, right: 30, left: 0, bottom: 0,\n                }}\n              >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Line type=\"monotone\" dataKey='value' stroke=\"#8884d8\" fill=\"#8884d8\" />\n              </LineChart>\n              <Table striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>Indicador</th>\n                    <th>Valor</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Volumen Total Tranzado</td>\n                    <td>Mark</td>\n                  </tr>\n                  <tr>\n                    <td>Alto Histórico</td>\n                    <td>{stocks[key]['higher']}</td>\n                  </tr>\n                  <tr>\n                    <td>Bajo Histórico</td>\n                    <td>{stocks[key]['lower']}</td>\n                  </tr>\n                  <tr>\n                    <td>Último Precio</td>\n                    <td>{stocks[key]['last_price']}</td>\n                  </tr>\n                  <tr>\n                    <td>Cambio Porcentual</td>\n                    <td>{stocks[key]['porcentual_change']}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </div>\n          ))\n          }\n        </div>\n      );\n    } else { \n      return( \n        <div className=\"App\">\n          <h1>Acción</h1>\n        </div>\n      ); \n    }\n  }\n    \n} \n\nexport default App;"]},"metadata":{},"sourceType":"module"}