{"ast":null,"code":"var _jsxFileName = \"/Users/sofiapacheco/Desktop/T3/t3/src/App.js\";\nimport React from 'react';\nimport './styles/App.css';\nimport * as io from 'socket.io-client'; // import { withStyles, makeStyles } from '@material-ui/core/styles';\n\nimport { Container, Row, Col, Table } from 'react-bootstrap/';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // import { \n//   GridList, \n//   GridListTile, \n//   Table, \n//   TableBody, \n//   TableCell, \n//   TableHead, \n//   tr \n// } from '@material-ui/core/';\n\nimport { Line, LineChart, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts'; // const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//     fontSize: 12\n//   },\n//   body: {\n//     fontSize: 12,\n//   },\n// }))(TableCell);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      exchange: {},\n      stocks: {},\n      ready_stock: false,\n      ready_exchange: false,\n      on: false\n    };\n  }\n\n  getInitialStock(socket) {\n    console.log('hola');\n    let copyStocks = {};\n    socket.emit('STOCKS');\n    socket.on('STOCKS', data => {\n      console.log(data);\n\n      for (const num in data) {\n        copyStocks[data[num]['ticker']] = {\n          'company_name': data[num]['company_name'],\n          'country': data[num]['country'],\n          'total_volume': 0,\n          'higher': 0,\n          'lower': 0,\n          'last_price': 0,\n          'porcentual_change': 0,\n          'data': []\n        };\n      }\n\n      this.setState({\n        stocks: copyStocks,\n        ready_stock: true\n      });\n    });\n  }\n\n  getInitialExchange(socket) {\n    let copyExchange = {};\n    let stocks = {};\n    socket.emit('STOCKS');\n    socket.on('STOCKS', data => {\n      stocks = data;\n    });\n    socket.emit('EXCHANGES');\n    socket.on('EXCHANGES', data => {\n      for (const num in data) {\n        copyExchange[data[num]['exchange_ticker']] = {\n          'company_ticker': [],\n          'exchange_name': data[num]['name'],\n          'country': data[num]['country'],\n          'stocks': [...data[num]['listed_companies']],\n          'total_volume': 0,\n          'sell_volume': 0,\n          'buy_volume': 0,\n          'quantity': [...data[num]['listed_companies']].length,\n          'participation': 0\n        };\n\n        for (var i in stocks) {\n          if (data[num]['listed_companies'].indexOf(stocks[i]['company_name']) >= 0) {\n            copyExchange[data[num]['exchange_ticker']]['company_ticker'].push(stocks[i]['ticker']);\n          }\n        }\n      }\n\n      this.setState({\n        exchange: copyExchange,\n        ready_exchange: true\n      });\n    });\n  }\n\n  updateStock(socket) {\n    console.log('updateStock');\n    socket.on('UPDATE', data => {\n      if (this.state.ready_stock && this.state.ready_exchange) {\n        var date = new Date(data['time'] * 1000);\n        var hours = date.getHours();\n        var minutes = \"0\" + date.getMinutes();\n        var formattedTime = hours + ':' + minutes.substr(-2);\n        let copyStocks = { ...this.state.stocks\n        };\n        copyStocks[data['ticker']]['data'].push({\n          'time': formattedTime,\n          value: data['value']\n        });\n\n        if (copyStocks[data['ticker']]['lower'] === 0 || copyStocks[data['ticker']]['lower'] > data['value']) {\n          copyStocks[data['ticker']]['lower'] = data['value'];\n        }\n\n        if (copyStocks[data['ticker']]['higher'] < data['value']) {\n          copyStocks[data['ticker']]['higher'] = data['value'];\n        }\n\n        copyStocks[data['ticker']]['porcentual_change'] = Math.round((data['value'] * 100 / copyStocks[data['ticker']]['last_price'] - 100) * 100) / 100;\n        copyStocks[data['ticker']]['last_price'] = data['value'];\n        this.setState({\n          stocks: copyStocks\n        });\n      }\n    });\n  }\n\n  tickerBuy(socket) {\n    socket.on('BUY', data => {\n      if (this.state.ready_stock && this.state.ready_exchange) {\n        let copyStocks = { ...this.state.stocks\n        };\n        let copyExchange = { ...this.state.exchange\n        };\n        let market_total = 0;\n        copyStocks[data['ticker']]['total_volume'] = data['volume'] + copyStocks[data['ticker']]['total_volume'];\n\n        for (const ex in copyExchange) {\n          if (copyExchange[ex]['company_ticker'].indexOf(data['ticker']) >= 0) {\n            copyExchange[ex]['buy_volume'] = data['volume'] + copyExchange[ex]['buy_volume'];\n            copyExchange[ex]['total_volume'] = data['volume'] + copyExchange[ex]['total_volume'];\n          }\n\n          market_total = market_total + copyExchange[ex]['total_volume'];\n        }\n\n        for (const ex in copyExchange) {\n          copyExchange[ex]['participation'] = Math.round(copyExchange[ex]['total_volume'] * 100 / market_total * 100) / 100;\n        }\n\n        this.setState({\n          stocks: copyStocks,\n          exchange: copyExchange\n        });\n      }\n    });\n  }\n\n  tickerSell(socket) {\n    socket.on('SELL', data => {\n      if (this.state.ready_stock && this.state.ready_exchange) {\n        let copyStocks = { ...this.state.stocks\n        };\n        let copyExchange = { ...this.state.exchange\n        };\n        let market_total = 0;\n        copyStocks[data['ticker']]['total_volume'] = data['volume'] + copyStocks[data['ticker']]['total_volume'];\n\n        for (const ex in copyExchange) {\n          if (copyExchange[ex]['company_ticker'].indexOf(data['ticker']) >= 0) {\n            copyExchange[ex]['sell_volume'] = data['volume'] + copyExchange[ex]['sell_volume'];\n            copyExchange[ex]['total_volume'] = data['volume'] + copyExchange[ex]['total_volume'];\n          }\n\n          market_total = market_total + copyExchange[ex]['total_volume'];\n        }\n\n        for (const ex in copyExchange) {\n          copyExchange[ex]['participation'] = Math.round(copyExchange[ex]['total_volume'] * 100 / market_total * 100) / 100;\n        }\n\n        this.setState({\n          stocks: copyStocks,\n          exchange: copyExchange\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    var socket = io('wss://le-18262636.bitzonte.com', {\n      path: '/stocks'\n    });\n    this.getInitialStock(socket);\n    this.getInitialExchange(socket);\n    this.updateStock(socket);\n    this.tickerSell(socket);\n    this.tickerBuy(socket);\n  }\n\n  render() {\n    // console.log(this.state.stocks)\n    if (this.state.ready_stock && this.state.ready_exchange) {\n      const {\n        stocks\n      } = this.state;\n      const {\n        exchange\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          backgroundColor: '#2C2F38'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, Object.keys(exchange).map((key, index) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '90vw',\n          marginBottom: '35px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          backgroundColor: '#2C2F38'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '20px',\n          fontWeight: 'bold',\n          color: 'white',\n          textTransform: 'uppercase'\n        },\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, exchange[key]['exchange_name'])), /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          color: '#8C8F9C',\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 27\n        }\n      }, \"Volumen Compra\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 27\n        }\n      }, \"Volumen Venta\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 27\n        }\n      }, \"Volumen Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 27\n        }\n      }, \"Cantidad Acciones\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 27\n        }\n      }, \"Participaci\\xF3n Mercado\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          color: 'white',\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 27\n        }\n      }, exchange[key]['buy_volume']), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 27\n        }\n      }, exchange[key]['sell_volume']), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 27\n        }\n      }, exchange[key]['total_volume']), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 27\n        }\n      }, exchange[key]['quantity']), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 27\n        }\n      }, exchange[key]['participation'])))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, Object.values(exchange[key]['company_ticker']).map((ticker, j) => /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        align: \"center\",\n        width: \"150%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '16px',\n          color: 'white'\n        },\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }, stocks[ticker]['company_name']), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '14px',\n          color: '#8C8F9C'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }, stocks[ticker]['country'], \" - \", ticker), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n        height: 300,\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        width: 650,\n        height: 350,\n        data: [...stocks[ticker]['data']],\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        stroke: \"#8C8F9C\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        stroke: \"#8C8F9C\",\n        dataKey: \"time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        stroke: \"#8C8F9C\",\n        domain: [\"dataMin - 10\", \"dataMax + 10\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        itemStyle: {\n          fontWeight: \"bold\"\n        },\n        formatter: function (value, name) {\n          return `USD ${value}`;\n        },\n        labelFormatter: function (value) {\n          return `time: ${value}`;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"value\",\n        stroke: \"#E95765\",\n        fill: \"#E95765\",\n        strokeWidth: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"table table-sm table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          color: '#8C8F9C',\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 31\n        }\n      }, \"Volumen Total\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 31\n        }\n      }, \"Alto Hist\\xF3rico\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 31\n        }\n      }, \"Bajo Hist\\xF3rico\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 31\n        }\n      }, \"\\xDAltimo Precio\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 31\n        }\n      }, \"Cambio Porcentual\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          color: 'white',\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 31\n        }\n      }, stocks[ticker]['total_volume']), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 31\n        }\n      }, stocks[ticker]['higher']), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 31\n        }\n      }, stocks[ticker]['lower']), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 31\n        }\n      }, stocks[ticker]['last_price']), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          borderColor: '#8C8F9C'\n        },\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 31\n        }\n      }, stocks[ticker]['porcentual_change']))))))))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sofiapacheco/Desktop/T3/t3/src/App.js"],"names":["React","io","Container","Row","Col","Table","Line","LineChart","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","App","Component","constructor","state","exchange","stocks","ready_stock","ready_exchange","on","getInitialStock","socket","console","log","copyStocks","emit","data","num","setState","getInitialExchange","copyExchange","length","i","indexOf","push","updateStock","date","Date","hours","getHours","minutes","getMinutes","formattedTime","substr","value","Math","round","tickerBuy","market_total","ex","tickerSell","componentDidMount","path","render","backgroundColor","Object","keys","map","key","index","width","marginBottom","fontSize","fontWeight","color","textTransform","span","borderColor","values","ticker","j","top","right","left","bottom","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles/App.css';\nimport * as io from 'socket.io-client';\n// import { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Container, Row, Col, Table } from 'react-bootstrap/';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import { \n//   GridList, \n//   GridListTile, \n//   Table, \n//   TableBody, \n//   TableCell, \n//   TableHead, \n//   tr \n// } from '@material-ui/core/';\n\nimport {\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip, \n  CartesianGrid,\n  ResponsiveContainer\n} from 'recharts';\n\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//     fontSize: 12\n//   },\n//   body: {\n//     fontSize: 12,\n//   },\n// }))(TableCell);\n\nclass App extends React.Component{\n  constructor() {\n    super();\n    \n    this.state = {\n      exchange: {},\n      stocks: {},\n      ready_stock: false,\n      ready_exchange: false,\n      on: false\n    };\n  }\n  \n  getInitialStock(socket) {\n    console.log('hola')\n    let copyStocks = {};\n    socket.emit('STOCKS');\n    socket.on('STOCKS', (data) => {\n      console.log(data)\n      for (const num in data) {\n        \n        copyStocks[data[num]['ticker']] = {\n          'company_name': data[num]['company_name'],\n          'country': data[num]['country'],\n          'total_volume': 0,\n          'higher': 0,\n          'lower': 0,\n          'last_price': 0,\n          'porcentual_change': 0,\n          'data': [],\n        };\n      }\n      this.setState({ stocks: copyStocks, ready_stock: true });\n    });\n  }\n\n  getInitialExchange(socket){\n    let copyExchange = {}\n    let stocks = {}\n    socket.emit('STOCKS')\n    socket.on('STOCKS', (data) => {\n      stocks = data\n    });\n    socket.emit('EXCHANGES')\n    socket.on('EXCHANGES', (data) => {\n      \n      for (const num in data) {\n        copyExchange[data[num]['exchange_ticker']] = {\n          'company_ticker': [],\n          'exchange_name': data[num]['name'],\n          'country': data[num]['country'],\n          'stocks':[...data[num]['listed_companies']],\n          'total_volume': 0,\n          'sell_volume': 0,\n          'buy_volume': 0,\n          'quantity': ([...data[num]['listed_companies']]).length,\n          'participation': 0\n        }\n        for (var i in stocks){\n          if (data[num]['listed_companies'].indexOf(stocks[i]['company_name']) >= 0){\n            copyExchange[data[num]['exchange_ticker']]['company_ticker'].push(stocks[i]['ticker'])\n        }}      \n      }\n      this.setState({ exchange: copyExchange, ready_exchange: true });\n    });\n  }\n\n  updateStock(socket) {\n\n    console.log('updateStock');\n    socket.on('UPDATE',(data) => {\n      if (this.state.ready_stock && this.state.ready_exchange){\n        var date = new Date(data['time'] * 1000)\n        var hours = date.getHours()\n        var minutes = \"0\" + date.getMinutes()\n        var formattedTime = hours + ':' + minutes.substr(-2)\n        let copyStocks = { ...this.state.stocks };\n        copyStocks[data['ticker']]['data'].push({'time':formattedTime, value :data['value']});\n        if (copyStocks[data['ticker']]['lower']=== 0 || copyStocks[data['ticker']]['lower'] > data['value']){\n          copyStocks[data['ticker']]['lower'] = data['value']\n        }\n        if (copyStocks[data['ticker']]['higher'] < data['value']){\n          copyStocks[data['ticker']]['higher'] = data['value']\n        }\n        copyStocks[data['ticker']]['porcentual_change'] = Math.round(((data['value']*100/copyStocks[data['ticker']]['last_price'])-100) * 100) / 100\n        copyStocks[data['ticker']]['last_price'] = data['value']\n        this.setState({ stocks: copyStocks })\n      }\n    });\n  }\n\n  tickerBuy(socket) {\n    socket.on('BUY',(data) => {\n      if (this.state.ready_stock && this.state.ready_exchange){\n        let copyStocks = {...this.state.stocks }\n        let copyExchange = { ...this.state.exchange }\n        let market_total = 0\n        copyStocks[data['ticker']]['total_volume'] = data['volume'] + copyStocks[data['ticker']]['total_volume']\n        for (const ex in copyExchange){\n          if (copyExchange[ex]['company_ticker'].indexOf(data['ticker']) >= 0){\n            copyExchange[ex]['buy_volume'] = data['volume'] + copyExchange[ex]['buy_volume']\n            copyExchange[ex]['total_volume'] = data['volume'] + copyExchange[ex]['total_volume']\n          }\n          market_total = market_total + copyExchange[ex]['total_volume']\n        }\n        for (const ex in copyExchange){\n          copyExchange[ex]['participation'] = Math.round(((copyExchange[ex]['total_volume']*100)/market_total) * 100) / 100\n        }\n        this.setState({ stocks: copyStocks, exchange: copyExchange })\n      }\n    });\n  }\n\n  tickerSell(socket) {\n    socket.on('SELL',(data) => {\n      if (this.state.ready_stock && this.state.ready_exchange){\n        let copyStocks = {...this.state.stocks }\n        let copyExchange = {...this.state.exchange}\n        let market_total = 0\n        copyStocks[data['ticker']]['total_volume'] = data['volume'] + copyStocks[data['ticker']]['total_volume']\n        for (const ex in  copyExchange){\n          if (copyExchange[ex]['company_ticker'].indexOf(data['ticker']) >= 0){\n            copyExchange[ex]['sell_volume'] = data['volume'] + copyExchange[ex]['sell_volume']\n            copyExchange[ex]['total_volume'] = data['volume'] + copyExchange[ex]['total_volume']\n          }\n          market_total = market_total + copyExchange[ex]['total_volume']\n        }\n        for (const ex in copyExchange){\n          copyExchange[ex]['participation'] = Math.round(((copyExchange[ex]['total_volume']*100)/market_total) * 100) / 100\n        }\n        this.setState({ stocks: copyStocks, exchange: copyExchange })\n      }\n    });\n  }\n\n\n  componentDidMount() {\n    var socket = io('wss://le-18262636.bitzonte.com', {\n      path: '/stocks'\n    });\n    this.getInitialStock(socket);\n    this.getInitialExchange(socket);\n    this.updateStock(socket);\n    this.tickerSell(socket);\n    this.tickerBuy(socket);\n }\n\n  \n  render () {\n    // console.log(this.state.stocks)\n    if (this.state.ready_stock && this.state.ready_exchange) {\n      const { stocks } = this.state;\n      const { exchange } = this.state;\n      \n      return (\n        <div className=\"container\" style={{backgroundColor: '#2C2F38'}}>\n          {\n            Object.keys(exchange).map((key, index) => (\n             <div style={{width: '90vw', marginBottom: '35px'}}>\n                <Row style={{backgroundColor: '#2C2F38'}}>\n                  <Col md={4}>\n                    <p style={{fontSize: '20px', fontWeight: 'bold', color: 'white', textTransform: 'uppercase'}} key={index}>\n                      {exchange[key]['exchange_name']}\n                    </p>\n                  </Col>\n                  <Col md={{ span: 4}}>\n                    <Table className=\"table table-sm table-bordered\">\n                      <thead>\n                        <tr style={{color: '#8C8F9C', fontSize: '12px'}}>\n                          <th style={{borderColor: '#8C8F9C'}} align=\"center\">Volumen Compra</th>\n                          <th style={{borderColor: '#8C8F9C'}} align=\"center\">Volumen Venta</th>\n                          <th style={{borderColor: '#8C8F9C'}} align=\"center\">Volumen Total</th>\n                          <th style={{borderColor: '#8C8F9C'}} align=\"center\">Cantidad Acciones</th>\n                          <th style={{borderColor: '#8C8F9C'}} align=\"center\">Participación Mercado</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr style={{color: 'white', fontSize: '14px'}}>\n                          <td style={{borderColor: '#8C8F9C'}} align=\"center\">{exchange[key]['buy_volume']}</td>\n                          <td style={{borderColor: '#8C8F9C'}} align=\"center\">{exchange[key]['sell_volume']}</td>\n                          <td style={{borderColor: '#8C8F9C'}} align=\"center\">{exchange[key]['total_volume']}</td>\n                          <td style={{borderColor: '#8C8F9C'}} align=\"center\">{exchange[key]['quantity']}</td>\n                          <td style={{borderColor: '#8C8F9C'}} align=\"center\">{exchange[key]['participation']}</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n                  </Col>\n                </Row>\n                <Row>\n                {\n                  Object.values(exchange[key]['company_ticker']).map((ticker, j) => (\n                    <Col xs={6}>\n                      <Container align=\"center\" width=\"150%\">\n                        <p style={{fontSize: '16px', color: 'white'}} key={j}>\n                          {stocks[ticker]['company_name']}\n                        </p>\n                        <p style={{fontSize: '14px', color: '#8C8F9C'}}>\n                          {stocks[ticker]['country']} - {ticker}\n                        </p>\n                        <ResponsiveContainer height={300} width='100%'>\n                          <LineChart\n                              width={650}\n                              height={350}\n                              data={[...stocks[ticker]['data']]}\n                              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                            >\n                            <CartesianGrid strokeDasharray=\"3 3\" stroke='#8C8F9C'/>\n                            <XAxis stroke='#8C8F9C' dataKey=\"time\" />\n                            <YAxis stroke='#8C8F9C' domain={[\"dataMin - 10\", \"dataMax + 10\"]}/>\n                            <Tooltip \n                              itemStyle={{ fontWeight: \"bold\" }}\n                              formatter={function(value, name) {\n                                return `USD ${value}`;\n                              }}\n                              labelFormatter={function(value) {\n                                return `time: ${value}`;\n                              }}\n                            />\n                            <Line type=\"monotone\" dataKey='value' stroke=\"#E95765\" fill=\"#E95765\" strokeWidth=\"3\" />\n                            </LineChart>  \n                        </ResponsiveContainer>\n                        <Row>\n                        <Table className=\"table table-sm table-bordered\">\n                          <thead>\n                            <tr style={{color: '#8C8F9C', fontSize: '12px'}}>\n                              <th style={{borderColor: '#8C8F9C'}} align=\"center\">Volumen Total</th>\n                              <th style={{borderColor: '#8C8F9C'}} align=\"center\">Alto Histórico</th>\n                              <th style={{borderColor: '#8C8F9C'}} align=\"center\">Bajo Histórico</th>\n                              <th style={{borderColor: '#8C8F9C'}} align=\"center\">Último Precio</th>\n                              <th style={{borderColor: '#8C8F9C'}} align=\"center\">Cambio Porcentual</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr style={{color: 'white', fontSize: '14px'}}>\n                              <td style={{borderColor: '#8C8F9C'}} align=\"center\">{stocks[ticker]['total_volume']}</td>\n                              <td style={{borderColor: '#8C8F9C'}} align=\"center\">{stocks[ticker]['higher']}</td>\n                              <td style={{borderColor: '#8C8F9C'}} align=\"center\">{stocks[ticker]['lower']}</td>\n                              <td style={{borderColor: '#8C8F9C'}} align=\"center\">{stocks[ticker]['last_price']}</td>\n                              <td style={{borderColor: '#8C8F9C'}} align=\"center\">{stocks[ticker]['porcentual_change']}</td>\n                            </tr>\n                          </tbody>\n                        </Table>\n                        </Row>                       \n                      </Container>\n                    </Col>\n                  ))\n                }\n                </Row>\n              </div>\n            ))\n          }\n        </div>\n      );\n    } else { \n      return( \n        <div className=\"container\">\n        </div>\n      ); \n    }\n  }\n    \n} \n\nexport default App;"]},"metadata":{},"sourceType":"module"}